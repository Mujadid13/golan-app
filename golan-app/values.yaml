# Default values for golan-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Replica count for the application
replicaCount: 2  # Set to 2 for redundancy; adjust as needed

# Container image configuration
image:
  repository: golan.azurecr.io/golan-app  # Replace with your actual image repository
  tag: "latest"  # Specify the image tag; adjust as necessary

# Secrets for pulling from a private image repository
imagePullSecrets:
  - name: acr-secret  # Replace with your actual secret name if using a private repo

# Override chart name
nameOverride: ""
fullnameOverride: "golan-app"  # Full name for the application

# Service account configuration
serviceAccount:
  create: true  # Create a service account for the application
  automount: true  # Automatically mount the service account's API credentials
  annotations: {}  # Add any necessary annotations here
  name: ""  # Leave empty to auto-generate name

# Pod annotations for metadata
podAnnotations:
  monitoring.example.com/enabled: "true"  # Enable monitoring
  version: "v1.0"  # Application version

# Pod labels for organization
podLabels: {}

# Pod security context
podSecurityContext:
  fsGroup: 2000  # Group ID for file system acces

# Node selector for scheduling
nodeSelector: {}

# Tolerations for scheduling on tainted nodes
tolerations: []

# Affinity for scheduling preferences
affinity: {}

# Service configuration
service:
  enabled: true  # Enable the service
  name: "golan-app-service"  # Service name
  type: LoadBalancer  # Service type; adjust as necessary (ClusterIP, NodePort, etc.)
  port: 8080  # Service port
  targetPort: 8080  # Port the container listens on
  annotations: {}  # Add any necessary service annotations here

redis:
  enabled: true
  image:
    repository: redis
    tag: "latest"
  service:
    type: ClusterIP  # or LoadBalancer, depending on your requirement
    port: 6379

# Horizontal Pod Autoscaler configuration
hpa:
  enabled: false  # Enable Horizontal Pod Autoscaler
  minReplicas: 1  # Minimum number of replicas
  maxReplicas: 10  # Maximum number of replicas
  targetCPUUtilizationPercentage: 80  # Target CPU utilization percentage
  targetMemoryUtilizationPercentage: 70

# Ingress configuration
ingress:
  enabled: false

# Health checks configuration
livenessProbe:
  enabled: true  # Enable liveness probe
  initialDelaySeconds: 30  # Delay before the probe starts
  periodSeconds: 10  # Frequency of the probe

readinessProbe:
  enabled: true  # Enable readiness probe
  initialDelaySeconds: 5  # Delay before the probe starts
  periodSeconds: 10  # Frequency of the probe

